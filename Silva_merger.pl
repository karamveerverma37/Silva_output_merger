####Created by karamveer, PhD student, Pondicherry University on 12/11/2022############
##This program can generate a consolidated output table by compiling individual sample OTU tables generated by SilvaNGS##
#read the file with all samples spepecies
#input_folder should contain only otu count tables
if($#ARGV<1){
	die "Usage: perl Silva_merger.pl input_folder output_file.csv\n";
}
$inputfile=@ARGV[0];
$outpath=@ARGV[1];
system(`cat $inputfile/* > all_new.csv`);
$filename='all_new.csv';
open(FILE,$filename);
@file=<FILE>;
foreach $file(@file){
	@line=split('\t',$file);
#extract the taxonomy column
	push(@array,$line[5]);
}
#print"@array";
#create an hash table with the array
%hash=@array;
@Key_array = keys %hash;
unshift(@Key_array,"Taxonomy\n \n");
#print"@Key_array";
open(KEY, '>', 'key.txt');
print KEY "@Key_array";
#$dir='input1';
@files = glob( $inputfile . '/*' );
foreach $filename1(@files){
	#print "***$filename1***";
	@sample=split('---|/',$filename1);
	$sampleName=$sample[1];
	#print "$sampleName";
	$sampleName1=uc($sampleName);
	@out_array=();
	push(@out_array,"$sampleName1\n");
	open(FILE1,$filename1);
	@file1=<FILE1>;
	shift(@file1);
	my %hash1;
	foreach $line1(@file1){
		@line2=split('\t',$line1);
		$key=$line2[5];
		chomp($key);
		$value=$line2[0];
		#print $value;
		$hash1{$key} = $value;
	}
	foreach $key1(@Key_array){
		chomp($key1);
		if(exists($hash1{$key1})){
			push(@out_array,"$hash1{$key1}\n");
		}
		else{
			push(@out_array,"0\n");
		}
	}
	$out_file="$sampleName.txt";
	#print "$out_file";
	open(OUT, '>', $out_file);
	print OUT "@out_array";
	#close OUT;
}
#open(OUT, '>', 'out1.tsv');
#print OUT "@out_array";
$key2='key.txt';
$patt=lc(substr($sampleName1,0,3));
#print $patt;
$pattern="$patt*";
#$out2='consolidated.csv';
system(`paste -d "," $key2 $pattern > $outpath`);
system(`rm $pattern`);
